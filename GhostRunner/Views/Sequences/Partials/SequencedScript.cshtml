@model GhostRunner.ViewModels.Sequences.Partials.SequencedScriptModel

<script language="javascript" type="text/javascript">
    function beginValidation() {
        var validation = validateScript();

        if ($("#SequenceScript_Name").val().trim().length == 0) validation.Errors.unshift("- A name for the script must be provided");

        $("#validation-container").show();
        $("#validation-errors-container").hide();
        $("#validation-warnings-container").hide();
        $("#validation-success-container").hide();

        $("#validation-seperator").hide();
        $("#create-button-container").hide();

        if ((validation.Errors.length > 0) || (validation.Warnings.length > 0)) {
            $("#errors-container").empty();
            $("#warnings-container").empty();

            if (validation.Errors.length > 0) {
                $("#validation-errors-container").show();

                for (var i = 0; i < validation.Errors.length; i++) {
                    $("#errors-container").append(validation.Errors[i] + "<br/>");
                }
            }

            if ((validation.Errors.length > 0) && (validation.Warnings.length > 0)) $("#validation-seperator").show();

            if (validation.Warnings.length > 0) {
                $("#validation-warnings-container").show();

                for (var i = 0; i < validation.Warnings.length; i++) {
                    $("#warnings-container").append(validation.Warnings[i] + "<br/>");
                }
            }
        }
        else $("#validation-success-container").show();

        if (validation.Errors.length == 0) $("#create-button-container").show();
    }

    function runScript() {
        window.location.href = '@Url.Action("RunSequencedScript/" + Model.SequenceScript.ExternalId, "Sequences")';
    }

    function editScript() {
        $("#edit-code").show();
        $("#view-code").hide();
    }

    function cancelEditScript() {
        $("#edit-code").hide();
        $("#view-code").show();
    }

    $(document).ready(function () {
        $("textarea").keydown(function (e) {
            if (e.keyCode === 9) {
                var start = this.selectionStart;
                var end = this.selectionEnd;

                var $this = $(this);
                var value = $this.val();

                $this.val(value.substring(0, start)
                            + "\t"
                            + value.substring(end));

                this.selectionStart = this.selectionEnd = start + 1;

                e.preventDefault();
            }
        });
    });
</script>

<div id="view-code" class="model-code panel">
    <div class="header">@Model.SequenceScript.Name - @ScriptHelper.GetReadableScriptType(Model.SequenceScript.Type.ToString())</div>
    <div class="body">
        <div class="section">
            @Html.Partial("ScriptType/view/" + Model.SequenceScript.Type.ToString().ToLower(), Model.SequenceScript)
        </div>
    </div>
    <div class="navigation">
        <div class="left button-padding"><input type="button" onclick="editScript();" value="Edit" /></div>
        <div class="left button-padding"><input type="button" onclick="runScript();" value="Run" /></div>
        <div class="right"><input type="button" onclick="clearModalDialog();" value="Close" /></div>
        <div class="clear"></div>
    </div>
</div>
<div id="edit-code" class="model-code panel" style="display: none;">
    @using (Html.BeginForm("UpdateSequencedScript/" + Model.SequenceScript.ExternalId, "Sequences"))
    {
        <div class="body">
            <div class="section">
                <div class="detail-header">Script Name</div>
                <div class="input-container">@Html.TextBoxFor(model => model.SequenceScript.Name)</div>
            </div>
            @Html.Partial("ScriptType/modify/" + Model.SequenceScript.Type.ToString().ToLower(), Model.SequenceScript)
            <div id="validation-container" class="section" style="display:none">
                <div class="header">Validation</div>
                <div class="content-container">
                    <div id="validation-errors-container" style="display:none">
                        <div class="error-header">Errors</div>
                        <div id="errors-container" class="input-container"></div>
                    </div>
                    <div id="validation-seperator" style="display:none"><br /></div>
                    <div id="validation-warnings-container" style="display:none">
                        <div class="warnings-header"><b>Warnings</b></div>
                        <div id="warnings-container" class="input-container"></div>
                    </div>
                    <div id="validation-success-container" style="display:none">
                        <div id="success-container" class="input-container">No problems detected!</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="navigation">
            <div class="left"><input type="button" onclick="cancelEditScript()" value="Cancel" /></div>
            <div id="create-button-container" class="right" style="display:none;"><input type="submit" value="Update" class="button-padding" /></div>
            <div id="validate-button-container" class="right"><input type="button" value="Validate" onclick="beginValidation();" /></div>
            <div class="clear"></div>
        </div>
    }
</div>
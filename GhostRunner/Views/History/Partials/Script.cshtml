@model Task

<table cellpadding="0" cellspacing="0">
    <tr>
        <td><span class="detail-header">Created:</span>&nbsp;&nbsp;</td>
        <td>@Model.Created.ToString("ddd dd MMM yy, hh:mm:ss tt")</td>
    </tr>
    <tr>
        <td><span class="detail-header">Started:</span>&nbsp;&nbsp;</td>
        @if ((Model.Status != Status.Unprocessed) && (Model.Started.HasValue))
        {
            <td>@Model.Started.Value.ToString("ddd dd MMM yy, hh:mm:ss tt")</td>
        }
        else
        {
            <td>-</td>
        }
    </tr>
    <tr>
        <td><span class="detail-header">Completed:</span>&nbsp;&nbsp;</td>
        @if (((Model.Status == Status.Completed) || (Model.Status == Status.Errored)) && (Model.Completed.HasValue))
        {
            <td>@Model.Completed.Value.ToString("ddd dd MMM yy, hh:mm:ss tt")</td>
        }
        else
        {
            <td>-</td>
        }
    </tr>
</table>
@if ((Model.TaskScripts.Count > 0) && (Model.TaskScripts.First().TaskScriptParameters.Count > 0))
{
    <br />
    <div>
        <div class="detail-header">Parameters</div>
        <table>
            @foreach (TaskScriptParameter tp in Model.TaskScripts.First().TaskScriptParameters)
            {
                <tr>
                    <td><b>@tp.Name:</b>&nbsp;</td>
                    <td>@tp.Value</td>
                </tr>
            }
        </table>
    </div>
}
<br />
@if (Model.TaskScripts.Count > 0)
{
    <div class="detail-header">Script&nbsp;&nbsp;<span class="script-type">@ScriptHelper.GetReadableScriptType(Model.TaskScripts.First().Type.ToString())</span></div>
    <div id="task-script-detail-more_@Model.TaskScripts.First().ID" class="more" onclick="showScriptDetail('@Model.TaskScripts.First().ID')">Show Script</div>
    <div id="task-script-detail-hide_@Model.TaskScripts.First().ID" class="more" onclick="hideScriptDetail('@Model.TaskScripts.First().ID')" style="display:none">Hide Script</div>
    <div id="task-script-detail-container_@Model.TaskScripts.First().ID" style="display:none">
        <br/>
        @Html.Partial("ScriptType/taskscript/" + Model.TaskScripts.First().Type.ToString().ToLower(), Model.TaskScripts.First())
    </div>
    if (!String.IsNullOrEmpty(Model.TaskScripts.First().Log))
    {
        <br />
        <div class="code">@Html.Raw(Model.TaskScripts.First().GetHTMLFormattedLogScript())</div>
    }
}
else
{
    <div class="detail-header">Script</div>
    <div><i>Undefined</i></div>
}
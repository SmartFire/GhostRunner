@model GhostRunner.ViewModels.Schedules.Partials.AddScheduledItemModel

<script language="javascript" type="text/javascript">
    var _selectItemType = null,
        _selectedTimeType = "daily";

    function returnTotScheduleType() {
        @if (Model.Scripts.Count > 0)
        {
            <text>setSelectedScriptOption("@Model.Scripts.First().ExternalId");</text>
        }

        $("#schedule-select").show();
        $("#select-sequence").hide();
        $("#select-script").hide();
    }

    function scheduleSequence() {
        _selectItemType = "sequence";

        $("#schedule-select").hide();
        $("#select-sequence").show();
    }

    function scheduleScript() {
        _selectItemType = "script";

        $("#schedule-select").hide();
        $("#select-script").show();
    }

    function returnToSchedule() {
        $("#select-when").hide();

        if (_selectItemType == "sequence") $("#select-sequence").show();
        else if (_selectItemType == "script") $("#select-script").show();
    }

    function scheduleTime() {
        $("#select-sequence").hide();
        $("#select-script").hide();
        $("#select-when").show();
    }

    function setSelectedScriptOption(scriptId) {
        @foreach (Script script in Model.Scripts)
        {
            <text>$("#parameters_@script.ExternalId").hide();</text>
            foreach (String parameter in script.GetAllParameters())
            {
                <text>$("#</text>@Model.GetParameterName(script.ExternalId, parameter)<text>").val("");</text>
            }
        }

        $("#parameters_" + scriptId).show();
    }

    function clearSelectedTime() {
        $("#schedule-monthly").removeClass("selected");
        $("#schedule-weekly").removeClass("selected");
        $("#schedule-daily").removeClass("selected");
    }

    function storeScheduledItem() {
        var scheduleItemId = null,
            scriptParameters = [],
            whenParameters = [];

        if (_selectItemType == "sequence") {
            scheduleItemId = $("#selected-sequence-id").val();
        }
        else if (_selectItemType == "script") {
            scheduleItemId = $("#selected-script-id").val();

            $(".script-parameter").each(function() {
                var parameterParts = $(this).attr("id").split("_");
                
                if (parameterParts[0] == scheduleItemId) {
                    scriptParameters.push({
                        name: parameterParts[2],
                        value: $(this).val()
                    });
                }
            });
        }

        if (_selectedTimeType == "daily") {
            whenParameters.push({ name: "hour", value: $("#day-hour").val() });
            whenParameters.push({ name: "minute", value: $("#day-minute").val() });
        }
        else if (_selectedTimeType == "weekly") {
            if ($("#sunday-check").is(":checked")) whenParameters.push({ name: "day", value: "sunday" });
            if ($("#monday-check").is(":checked")) whenParameters.push({ name: "day", value: "monday" });
            if ($("#tuesday-check").is(":checked")) whenParameters.push({ name: "day", value: "tuesday" });
            if ($("#wednesday-check").is(":checked")) whenParameters.push({ name: "day", value: "wednesday" });
            if ($("#thursday-check").is(":checked")) whenParameters.push({ name: "day", value: "thursday" });
            if ($("#friday-check").is(":checked")) whenParameters.push({ name: "day", value: "friday" });
            if ($("#saturday-check").is(":checked")) whenParameters.push({ name: "day", value: "saturday" });

            whenParameters.push({ name: "hour", value: $("#week-hour").val() });
            whenParameters.push({ name: "minute", value: $("#week-minute").val() });
        }
        else if (_selectedTimeType == "monthly") {
            $(".date").each(function() {
                var parameterParts = $(this).attr("id").split("_");
                
                if ($(this).hasClass("selected")) whenParameters.push({ name: "date", value: parameterParts[2] });
            });
            
            whenParameters.push({ name: "hour", value: $("#month-hour").val() });
            whenParameters.push({ name: "minute", value: $("#month-minute").val() });
        }

        $.ajax({
            url: '@Url.Action("InsertScheduledItem", "Schedules")',
            type: "POST",
            data: {
                projectId: '@Model.Project.ExternalId',
                itemId: scheduleItemId,
                itemType: _selectItemType,
                scriptParameters: JSON.stringify(scriptParameters),
                when: _selectedTimeType,
                whenParameters: JSON.stringify(whenParameters)
            },
            success: function (response) {
                window.location.href = "@Url.Action("Index/" + Model.Project.ExternalId, "Schedules")";
            }
        });
    }

    $(document).ready(function () {
        $("#selected-script-id").change(function () {
            setSelectedScriptOption($(this).val());
        });

        $(".date").click(function () {
            if ($(this).hasClass("selected")) $(this).removeClass("selected");
            else $(this).addClass("selected");
        });
        
        $("#schedule-daily").click(function () {
            clearSelectedTime();

            _selectedTimeType = "daily";

            $(".day").prop('checked', false);
            $(".date").removeClass("selected");

            $("#month-detail").hide();
            $("#week-detail").hide();
            $("#day-detail").show();

            $("#schedule-daily").addClass("selected");
        });

        $("#schedule-weekly").click(function () {
            clearSelectedTime();

            _selectedTimeType = "weekly";

            $(".day").prop('checked', false);
            $(".date").removeClass("selected");

            $("#month-detail").hide();
            $("#week-detail").show();
            $("#day-detail").hide();

            $("#schedule-weekly").addClass("selected");
        });
        
        $("#schedule-monthly").click(function () {
            clearSelectedTime();

            _selectedTimeType = "monthly";

            $(".day").prop('checked', false);
            $(".date").removeClass("selected");

            $("#month-detail").show();
            $("#week-detail").hide();
            $("#day-detail").hide();

            $("#schedule-monthly").addClass("selected");
        });
    });
</script>

<div class="model-dialog panel">
    <div class="header">Schedule</div>
    <div class="body">
        <div id="schedule-select">
            <div class="section">
                @if ((Model.Sequences.Count > 0) || (Model.Scripts.Count > 0))
                {
                    if (Model.Sequences.Count > 0)
                    { 
                        <div id="schedule-sequence" onclick="scheduleSequence()" class="button">I want to schedule a sequence</div>
                    }
                    if (Model.Scripts.Count > 0)
                    {
                        <div id="schedule-script" onclick="scheduleScript()" class="button" @if (Model.Sequences.Count > 0)
                                                                                            { @("style=margin-top:5px;") }>I want to schedule a script</div>
                    }
                }
                else
                {
                    <i>No sequences or scripts have been defined</i>
                }
            </div>
            <div class="navigation">
                <div class="left"><input type="button" onclick="clearModalDialog();" value="Cancel" /></div>
                <div class="clear"></div>
            </div>
        </div>
        <div id="select-sequence" style="display: none;">
            <div class="section">
                <div class="table">
                    <div class="table-row">
                        <div class="table-cell" style="padding-right: 5px;"><b>Select sequence:</b></div>
                        <div class="table-cell">@Html.DropDownList("selected-sequence-id", new SelectList(Model.Sequences, "ExternalId", "Name"), new { @style = "max-width:325px" })</div>
                    </div>
                </div>
            </div>
            <div class="navigation">
                <div class="left"><input type="button" onclick="clearModalDialog();" value="Cancel" /></div>
                <div class="right"><input type="button" onclick="scheduleTime()" value="Next" class="button-padding" /></div>
                <div class="right"><input type="button" onclick="returnTotScheduleType();" value="Back" /></div>
                <div class="clear"></div>
            </div>
        </div>
        <div id="select-script" style="display: none;">
            <div class="section">
                <div class="table">
                    <div class="table-row">
                        <div class="table-cell" style="padding-right: 5px;"><b>Select script:</b></div>
                        <div class="table-cell">@Html.DropDownList("selected-script-id", new SelectList(Model.Scripts, "ExternalId", "Name", Model.Scripts.First().ExternalId), new { @style = "width:353px" })</div>
                    </div>
                </div>
                @foreach (Script script in Model.Scripts)
                {
                    if (script.HasParameters())
                    {
                        <div id="parameters_@script.ExternalId" @if (script.ExternalId != Model.Scripts.First().ExternalId)
                                                                { <text>style="display:none;"</text> }>
                            <br />
                            <div><b>Parameters</b></div>
                            <table style="max-width:100%">
                                @foreach (String parameter in script.GetAllParameters())
                                {
                                    <tr>
                                        <td>@parameter:</td>
                                        <td><input type="text" id="@Model.GetParameterName(script.ExternalId, parameter)" class="script-parameter" /></td>
                                    </tr>
                                }
                            </table>
                        </div>
                    }
                }
            </div>
            <div class="navigation">
                <div class="left"><input type="button" onclick="clearModalDialog();" value="Cancel" /></div>
                <div class="right"><input type="button" onclick="scheduleTime()" value="Next" class="button-padding" /></div>
                <div class="right"><input type="button" onclick="returnTotScheduleType();" value="Back" /></div>
                <div class="clear"></div>
            </div>
        </div>
        <div id="select-when" style="display: none;">
            <div class="section">
                <div class="header">When to run</div>
                <div class="table" style="width:100%">
                    <div class="table-row">
                        <div class="table-cell">
                            <div id="schedule-daily" class="panel-select-item selected" style="width:50px;">Daily</div>
                            <div id="schedule-weekly" class="panel-select-item" style="width:50px;">Weekly</div>
                            <div id="schedule-monthly" class="panel-select-item" style="width:50px;">Monthly</div>
                        </div>
                        <div class="table-cell" style="width:100%;">
                            <div id="day-detail" class="panel-select-container">
                                <div id="day-time" class="table">
                                    <div class="table-row">
                                        <div class="table-cell">Run every day at&nbsp;&nbsp;</div>
                                        <div class="table-cell">
                                            <select id="day-hour">
                                                @for (int i = 0; i < 24; i++)
                                                {
                                                    <option value="@i">@((i + "").ToString().PadLeft(2, '0'))</option> }
                                            </select>
                                        </div>
                                        <div class="table-cell">&nbsp;<b>:</b>&nbsp;</div>
                                        <div class="table-cell">
                                            <select id="day-minute">
                                                @for (int i = 0; i < 60; i++)
                                                {
                                                    <option value="@i">@((i + "").PadLeft(2, '0'))</option> }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="week-detail" class="panel-select-container" style="display: none">
                                <div>Run on the selected days:</div>
                                <br />
                                <div id="month-calendar" class="calendar table">
                                    <div class="table-row">
                                        <div class="table-cell" style="text-align: center">S</div>
                                        <div class="table-cell" style="text-align: center">M</div>
                                        <div class="table-cell" style="text-align: center">T</div>
                                        <div class="table-cell" style="text-align: center">W</div>
                                        <div class="table-cell" style="text-align: center">T</div>
                                        <div class="table-cell" style="text-align: center">F</div>
                                        <div class="table-cell" style="text-align: center">S</div>
                                    </div>
                                    <div class="table-row">
                                        <div class="table-cell" style="text-align: center"><input type="checkbox" id="sunday-check" class="day" /></div>
                                        <div class="table-cell" style="text-align: center"><input type="checkbox" id="monday-check" class="day" /></div>
                                        <div class="table-cell" style="text-align: center"><input type="checkbox" id="tuesday-check" class="day" /></div>
                                        <div class="table-cell" style="text-align: center"><input type="checkbox" id="wednesday-check" class="day" /></div>
                                        <div class="table-cell" style="text-align: center"><input type="checkbox" id="thursday-check" class="day" /></div>
                                        <div class="table-cell" style="text-align: center"><input type="checkbox" id="friday-check" class="day" /></div>
                                        <div class="table-cell" style="text-align: center"><input type="checkbox" id="saturday-check" class="day" /></div>
                                    </div>
                                </div>
                                <br />
                                <div id="week-time" class="table">
                                    <div class="table-row">
                                        <div class="table-cell">at the following time&nbsp;&nbsp;</div>
                                        <div class="table-cell">
                                            <select id="week-hour">
                                                @for (int i = 0; i < 24; i++)
                                                {
                                                <option value="@i">@((i + "").ToString().PadLeft(2, '0'))</option> }
                                            </select>
                                        </div>
                                        <div class="table-cell">&nbsp;<b>:</b>&nbsp;</div>
                                        <div class="table-cell">
                                            <select id="week-minute">
                                                @for (int i = 0; i < 60; i++)
                                                {
                                                <option value="@i">@((i + "").PadLeft(2, '0'))</option> }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="month-detail" class="panel-select-container" style="display: none">
                                <div>Run on the selected dates:</div>
                                <br />
                                <div id="month-calendar" class="calendar table">
                                    <div class="table-row">
                                        @for (int i = 1; i <= 7; i++)
                                        { <div id="month_date_@i" class="date table-cell">@i</div> }
                                    </div>
                                    <div class="table-row">
                                        @for (int i = 8; i <= 14; i++)
                                        { <div id="month_date_@i" class="date table-cell">@i</div> }
                                    </div>
                                    <div class="table-row">
                                        @for (int i = 15; i <= 21; i++)
                                        { <div id="month_date_@i" class="date table-cell">@i</div> }
                                    </div>
                                    <div class="table-row">
                                        @for (int i = 22; i <= 28; i++)
                                        { <div id="month_date_@i" class="date table-cell">@i</div> }
                                    </div>
                                    <div class="table-row">
                                        @for (int i = 29; i <= 31; i++)
                                        { <div id="month_date_@i" class="date table-cell">@i</div> }
                                        <div class="table-cell">&nbsp;</div>
                                        <div class="table-cell">&nbsp;</div>
                                        <div class="table-cell">&nbsp;</div>
                                        <div class="table-cell">&nbsp;</div>
                                    </div>
                                </div>
                                <br />
                                <div id="month-time" class="table">
                                    <div class="table-row">
                                        <div class="table-cell">at the following time&nbsp;&nbsp;</div>
                                        <div class="table-cell">
                                            <select id="month-hour">
                                                @for (int i = 0; i < 24; i++)
                                                { <option value="@i">@((i + "").ToString().PadLeft(2, '0'))</option> }
                                            </select>
                                        </div>
                                        <div class="table-cell">&nbsp;<b>:</b>&nbsp;</div>
                                        <div class="table-cell">
                                            <select id="month-minute">
                                                @for (int i = 0; i < 60; i++)
                                                { <option value="@i">@((i + "").PadLeft(2, '0'))</option> }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="navigation">
                <div class="left"><input type="button" onclick="clearModalDialog();" value="Cancel" /></div>
                <div class="right"><input type="button" onclick="storeScheduledItem()" value="Finish" class="button-padding" /></div>
                <div class="right"><input type="button" onclick="returnToSchedule();" value="Back" /></div>
                <div class="clear"></div>
            </div>
        </div>
    </div>
</div>